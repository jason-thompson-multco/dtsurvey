% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr_compatability.R
\name{dplyr}
\alias{dplyr}
\alias{dplyr_reconstruct.dtsurvey}
\alias{select.dtsurvey}
\alias{dplyr_col_modify.dtsurvey}
\alias{group_by.dtsurvey}
\title{Tidyverse methods for dtsurvey objects. `_id` and attributes are sticky, use \link{as.data.frame} to let \code{dplyr}'s own methods drop them. Use these methods without the .dtsurvey suffix and after loading the tidyverse package with the generic (or after loading package tidyverse).}
\usage{
dplyr_reconstruct.dtsurvey(data, template)

select.dtsurvey(.data, ...)

dplyr_col_modify.dtsurvey(data, cols)

group_by.dtsurvey(...)
}
\arguments{
\item{data}{data.frame object}

\item{template}{template object to reconstruct}

\item{.data}{data.frame object}

\item{...}{other arguments}

\item{cols}{cols to keep}
}
\description{
Tidyverse methods for dtsurvey objects. `_id` and attributes are sticky, use \link{as.data.frame} to let \code{dplyr}'s own methods drop them. Use these methods without the .dtsurvey suffix and after loading the tidyverse package with the generic (or after loading package tidyverse).
}
\details{
\code{dplyr_reconstruct} Add the sdes and stype attributes back on so dtsurvey aggregation function still work

\code{select} keeps the id column regardless whether it is selected or not; to deselect it, first pipe through \code{as.data.frame} to let dplyr's own \code{select} drop it.
}
